<launch>

  <!-- basic set-up which progrmas should run -->
  <arg name="gazebo" default="true"/>
  <arg name="rviz" default="false"/>

  <!-- which inertia parameters should be loaded -->
  <arg name="inertia_param" default="original"/>
  <arg name="kinematic_param" default="original"/>
  <arg name="xbot_config_file" default="configs/ADVR_shared/centauro/configs/config_centauro.yaml"/>

  <!-- gazebo configuration parameters -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="extra_gazebo_args" default=""/>

  <!-- choose between "xbotcore" and "ros_control" control plugin -->
  <arg name="middleware" default="xbotcore"/>

  <!-- centauro model configuration parameters -->
  <!-- centauro modules -->
  <arg name="arms" default="true"/>
  <arg name="torso" default="true"/>
  <arg name="legs" default="true"/>
  <arg name="head" default="true"/>
  <arg name="wheels" default="false"/>
  <arg name="static" default="false"/>

  <!-- choose the end-effector -->
  <arg name="left_end_effector" default="stick"/>
  <arg name="right_end_effector" default="stick"/>
  <arg name="mass" default="0.0"/>

  <!-- actuators set-up-->
  <arg name="torso_actuators" default="true"/>
  <arg name="arm_actuators" default="true"/>
  <arg name="leg_actuators" default="true"/>
  <arg name="wheels_actuators" default="true"/>
  <arg name="head_actuators" default="true"/>

  <!-- sensors set-up-->
  <arg name="arm_sensors" default="true"/>
  <arg name="leg_sensors" default="true"/>
  <arg name="ft_sensors" default="true"/>
  <arg name="bumbers" default="true"/>
  <arg name="imu" default="true"/>

  <!-- which collision model should run:
       WARNING: exactly one parameter has to be true, otherwise simulation behaviour is undefined -->
  <arg name="collision_model" default="primitives"/>

  <!-- whether the mesh files should be loaded for visualization -->
  <!-- arg name="visual_model" default="mesh"/ -->
  <arg name="visual_model" default="simplified"/>
  <!-- arg name="visual_model" default="primitives"/ -->

  <!-- Load the URDF/SRDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(find centauro)/centauro_urdf/urdf/centauro.urdf.xacro'
                   GAZEBO:=$(arg gazebo)                        MIDDLEWARE:=$(arg middleware)                   XBOT_CONFIG_FILE:=$(arg xbot_config_file)
                   STATIC:=$(arg static)                        LEFT_END_EFFECTOR:=$(arg left_end_effector)     RIGHT_END_EFFECTOR:=$(arg right_end_effector)   MASS:=$(arg mass)
                   ARMS:=$(arg arms)                            LEGS:=$(arg legs)                               TORSO:=$(arg torso)                             WHEELS:=$(arg wheels)                           HEAD:=$(arg head)
                   ARM_ACTUATORS:=$(arg arm_actuators)          LEG_ACTUATORS:=$(arg leg_actuators)             TORSO_ACTUATORS:=$(arg torso_actuators)         WHEELS_ACTUATORS:=$(arg wheels_actuators)       HEAD_ACTUATORS:=$(arg head_actuators)
                   ARM_SENSORS:=$(arg arm_sensors)              LEG_SENSORS:=$(arg leg_sensors) 
                   FT_SENSORS:=$(arg ft_sensors)                BUMBERS:=$(arg bumbers)                         IMU:=$(arg imu)
                   VISUAL_MODEL:=$(arg visual_model)            COLLISION_MODEL:=$(arg collision_model) 
                   INERTIA_PARAM:=$(arg inertia_param)          KINEMATIC_PARAM:=$(arg kinematic_param)
        "/>

  <param name="robot_semantic_description" textfile="$(find centauro)/centauro_srdf/srdf/centauro.srdf"/>

  <!-- Load other no program-specific config files -->
  <include file="$(find centauro)/centauro_config/launch/centauro_config.launch" ns="/"/>

  <!-- run gazebo -->
  <group if="$(arg gazebo)">
        <!-- start gazebo server-->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
          <!--arg name="world_name" value="$(find centauro_gazebo)/worlds/centauro_house.world"/-->
          <arg name="world_name" value="$(find centauro_gazebo)/worlds/centauro_i2r.world"/>
          <arg name="paused" value="true"/>
          <arg name="use_sim_time" value="true"/>
          <arg name="gui" value="true"/>
          <arg name="headless" value="false"/>
          <arg name="debug" value="false"/>
          <arg name="physics" default="ode"/>
          <arg name="verbose" default="false"/>
          <arg name="extra_gazebo_args" default=""/>
        </include>

  	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
		args="-urdf -model centauro -param robot_description"/>

        <rosparam file="$(find centauro_gazebo)/config/centauro_control_joint_state_publisher.yaml" command="load"/>

  </group>


  <!-- Gmapping -->
  <!-- node pkg="gmapping" type="slam_gmapping" name="centauro_slam_gmapping" output="screen">
    <param name="base_frame" value="pelvis"/>
    <param name="odom_frame" value="world"/>
    <param name="map_update_interval" value="2.0"/>
    <param name="maxUrange" value="4.0"/>
    <param name="minimumScore" value="100"/>
    <param name="linearUpdate" value="0.2"/>
    <param name="angularUpdate" value="0.2"/>
    <param name="temporalUpdate" value="0.5"/>
    <param name="delta" value="0.05"/>
    <param name="lskip" value="0"/>
    <param name="particles" value="120"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="xmin" value="-10.0"/>
    <param name="ymin" value="-10.0"/>
    <param name="xmax" value="10.0"/>
    <param name="ymax" value="10.0"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
  </node -->

  <!-- run rviz -->
  <group if="$(arg rviz)">
	<group unless="$(arg gazebo)">
		<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
			<param name="publish_frequency" type="double" value="250.0"/>
		</node>

		<node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
			<param name="use_gui" value="$(arg gui)" unless="$(arg gazebo)"/>
		</node>
	</group>

	<node pkg="rviz" type="rviz" name="rviz"/>

  </group>

</launch>
